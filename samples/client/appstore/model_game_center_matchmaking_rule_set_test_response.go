/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GameCenterMatchmakingRuleSetTestResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterMatchmakingRuleSetTestResponse{}

// GameCenterMatchmakingRuleSetTestResponse struct for GameCenterMatchmakingRuleSetTestResponse
type GameCenterMatchmakingRuleSetTestResponse struct {
	Data GameCenterMatchmakingRuleSetTest `json:"data"`
	Links DocumentLinks `json:"links"`
}

// NewGameCenterMatchmakingRuleSetTestResponse instantiates a new GameCenterMatchmakingRuleSetTestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterMatchmakingRuleSetTestResponse(data GameCenterMatchmakingRuleSetTest, links DocumentLinks) *GameCenterMatchmakingRuleSetTestResponse {
	this := GameCenterMatchmakingRuleSetTestResponse{}
	this.Data = data
	this.Links = links
	return &this
}

// NewGameCenterMatchmakingRuleSetTestResponseWithDefaults instantiates a new GameCenterMatchmakingRuleSetTestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterMatchmakingRuleSetTestResponseWithDefaults() *GameCenterMatchmakingRuleSetTestResponse {
	this := GameCenterMatchmakingRuleSetTestResponse{}
	return &this
}

// GetData returns the Data field value
func (o *GameCenterMatchmakingRuleSetTestResponse) GetData() GameCenterMatchmakingRuleSetTest {
	if o == nil {
		var ret GameCenterMatchmakingRuleSetTest
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingRuleSetTestResponse) GetDataOk() (*GameCenterMatchmakingRuleSetTest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GameCenterMatchmakingRuleSetTestResponse) SetData(v GameCenterMatchmakingRuleSetTest) {
	o.Data = v
}

// GetLinks returns the Links field value
func (o *GameCenterMatchmakingRuleSetTestResponse) GetLinks() DocumentLinks {
	if o == nil {
		var ret DocumentLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingRuleSetTestResponse) GetLinksOk() (*DocumentLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *GameCenterMatchmakingRuleSetTestResponse) SetLinks(v DocumentLinks) {
	o.Links = v
}

func (o GameCenterMatchmakingRuleSetTestResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterMatchmakingRuleSetTestResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["links"] = o.Links
	return toSerialize, nil
}

type NullableGameCenterMatchmakingRuleSetTestResponse struct {
	value *GameCenterMatchmakingRuleSetTestResponse
	isSet bool
}

func (v NullableGameCenterMatchmakingRuleSetTestResponse) Get() *GameCenterMatchmakingRuleSetTestResponse {
	return v.value
}

func (v *NullableGameCenterMatchmakingRuleSetTestResponse) Set(val *GameCenterMatchmakingRuleSetTestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterMatchmakingRuleSetTestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterMatchmakingRuleSetTestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterMatchmakingRuleSetTestResponse(val *GameCenterMatchmakingRuleSetTestResponse) *NullableGameCenterMatchmakingRuleSetTestResponse {
	return &NullableGameCenterMatchmakingRuleSetTestResponse{value: val, isSet: true}
}

func (v NullableGameCenterMatchmakingRuleSetTestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterMatchmakingRuleSetTestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


